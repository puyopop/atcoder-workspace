#!/usr/bin/env python3
import sys

def f(A, R):
    from math import ceil
    from itertools import count
    if R == 1:
        return float('inf')
    for i in count(1):
        v = A * pow(R, i-1)
        if v > (10**9):
            return i

def solve(A: int, R: int, N: int):
    if R < 0:
        raise 'R < 0'
    n = f(A, R)
    return 'large' if N >= n else A * pow(R, N-1)

# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    R = int(next(tokens))  # type: int
    N = int(next(tokens))  # type: int
    print(solve(A, R, N))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    test()
    main()
