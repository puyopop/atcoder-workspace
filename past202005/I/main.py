#!/usr/bin/env python3


def show(t, a, b, rows, cols, N):
    '''
    >>> show(0, 0, 0, [0, 1], [0, 1], 2)
    0
    >>> show(0, 0, 1, [0, 1], [0, 1], 2)
    1
    >>> show(0, 1, 1, [0, 1], [0, 1], 2)
    3
    >>> show(0, 1, 1, [1, 0], [0, 1], 2)
    1
    '''
    if t == 1:
        a, b = b, a
    r = rows[a]
    c = cols[b]
    print(N * r + c)

# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    N = int(input())
    Q = int(input())
    Queries = (tuple(map(int, input().split())) for _ in range(Q))
    rows = list(range(N))
    cols = list(range(N))
    t = 0
    for q in Queries:
        if q[0] == 3:
            t ^= 1
            continue
        n, a, b = q
        a -= 1
        b -= 1
        if n == 4:
            show(t, a, b, rows, cols, N)
            continue
        elif (t == 0 and n == 1) or (t == 1 and n == 2):
            rows[a], rows[b] = rows[b], rows[a]
        else:
            cols[a], cols[b] = cols[b], cols[a]
                

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    test()
    main()
