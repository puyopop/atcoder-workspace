#!/usr/bin/env python3
import sys


def solve(X: int, N: int, p: "List[int]"):
    return min(filter(lambda x: x not in p, range(-1, 102)),
               key=lambda x: (abs(X-x), x))


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = int(next(tokens))  # type: int
    N = int(next(tokens))  # type: int
    p = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    print(solve(X, N, p))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
