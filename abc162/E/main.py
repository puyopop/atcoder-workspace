#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(N: int, K: int):
    counts = [0] * (K+1)
    for i in range(K, 0, -1):
        c = pow(K//i, N, MOD)
        for j in range(i+i, K+1, i):
            c -= counts[j]
        counts[i] = c
    ans = 0
    for i, c in enumerate(counts):
        ans = (ans + (i * c) % MOD) % MOD
    print(ans)


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, K)

if __name__ == '__main__':
    main()
