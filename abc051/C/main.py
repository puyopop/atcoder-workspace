#!/usr/bin/env python3
import sys


def solve(sx: int, sy: int, tx: int, ty: int):
    ans = []
    ans.append("R"*(tx-sx))
    ans.append("U"*(ty-sy))
    ans.append("L"*(tx-sx))
    ans.append("D"*(ty-sy+1))
    ans.append("R"*(tx-sx+1))
    ans.append("U"*(ty-sy+1))
    ans.append("L")
    ans.append("U")
    ans.append("L"*(tx-sx+1))
    ans.append("D"*(ty-sy+1))
    ans.append("R")
    return "".join(ans)

# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    sx = int(next(tokens))  # type: int
    sy = int(next(tokens))  # type: int
    tx = int(next(tokens))  # type: int
    ty = int(next(tokens))  # type: int
    print(solve(sx, sy, tx, ty))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
