#!/usr/bin/env python3


def solve(H, W, K, C):
    from itertools import compress, product
    def f(hs, ws):
        k = 0
        for h in range(H):
            if h in hs:
                continue
            for w in range(W):
                if w in ws:
                    continue
                if C[h][w] == "#":
                    k += 1
        return k == K
    ans = 0
    for hs in (set(compress(range(H), p)) for p in product([True, False], repeat=H)):
        for ws in (set(compress(range(W), p)) for p in product([True, False], repeat=W)):
            if f(hs, ws):
                ans += 1
    return ans

# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    H, W, K = map(int, input().split())
    C = [input() for _ in range(H)]
    print(solve(H, W, K, C))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
