#!/usr/bin/env python3
import sys


def solve(N: int, K: int):
    # (N, K, M), (N, M, K), (K, N, M), (K, M, N), (M, N, K), (M, K, N)
    n = (K - 1) * (N - K) * 6
    # (K, K, M), (K, M, K), (M, K, K)
    n += (N - K) * 3
    # (N, K, K), (K, N, K), (K, K, N)
    n += (K - 1) * 3
    # (K, K, K)
    n += 1
    return n / (N ** 3)

# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    print(solve(N, K))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
