#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int

def solve(S: str):
    """
    >>> solve("05")
    1
    >>> solve("18")
    5
    >>> solve("13")
    0
    """
    pre, cur = None, None
    base = 1
    if S[-1] == "?":
        cur = [1] * 10 + [0] * 3
    else:
        cur = [0] * 13
        cur[int(S[-1])] = 1
    for n in reversed(S[:-1]):
        pre, cur = cur, [0] * 13
        g = range(10) if n == "?" else [int(n)]
        for i in g:
            t = base * i % 13
            for j in range(13):
                cur[(j+t)%13] += pre[j]
        base = (base * 10) % 13
        print(n, pre, cur, base)
    return cur[5]

# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    print(solve(S))

if __name__ == '__main__':
    main()
