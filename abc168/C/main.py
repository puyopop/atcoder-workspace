#!/usr/bin/env python3
import sys

def f(b, c, th):
    '''
    >>> from math import pi
    >>> f(3, 4, pi / 2)
    5.0
    '''
    from math import cos
    return pow(b ** 2 + c ** 2 - 2 * b * c * cos(th), 0.5)


def solve(A: int, B: int, H: int, M: int):
    from math import pi
    m = M / 60
    h = (60 * H + M) / (12 * 60)
    return f(A, B, abs(h - m) * 2 * pi)


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    H = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    print(solve(A, B, H, M))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    test()
    main()
