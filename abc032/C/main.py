#!/usr/bin/env python3
import sys


def solve(N: int, K: int, s: "List[int]"):
    '''
    >>> solve(5, 6, [1, 2, 3, 1, 4])
    4
    '''
    if 0 in s:
        return N
    p, t, ans = 1, 0, 0
    for h in range(N):
        while t < N and p * s[t] <= K:
            p *= s[t]
            t += 1
        ans = max(ans, t - h)
        if t == h:
            t += 1
        else:
            p //= s[h]
    return ans

# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    s = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    print(solve(N, K, s))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    # test()
    main()
