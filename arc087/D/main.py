#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def _solve(s, n, f):
    m = sum(f)
    r = range(n-m-1, n+m+1)
    cur = set([s])
    for ff in f:
        nex = set()
        for c in cur:
            for op in (1, -1):
                t = c + op * ff
                if t not in r:
                    continue
                nex.add(t)
        cur = nex
    return n in cur

def solve(s: str, x: int, y: int):
    f = tuple(map(lambda x: len(x), s.split("T")))
    return YES if _solve(f[0], x, f[2::2]) and _solve(0, y, f[1::2]) else NO

# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    s = next(tokens)  # type: str
    x = int(next(tokens))  # type: int
    y = int(next(tokens))  # type: int
    print(solve(s, x, y))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
