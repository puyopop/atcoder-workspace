#!/usr/bin/env python3


def solve(N, M, X, C, A):
    from itertools import product, compress
    ans = float('inf')
    for selectors in product([0, 1], repeat=N):
        cost = sum(compress(C, selectors), 0)
        x = [0] * M
        for a in compress(A, selectors):
            for i, aa in enumerate(a):
                x[i] += aa
        if all(xx >= X for xx in x):
            ans = min(ans, cost)
    return -1 if ans == float('inf') else ans

# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools
def main():
    N, M, X = list(map(int, input().split()))
    C, A = [], []
    for _ in range(N):
        c, *a = map(int, input().split())
        C.append(c)
        A.append(a)
    print(solve(N, M, X, C, A))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
