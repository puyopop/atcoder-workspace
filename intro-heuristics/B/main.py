#!/usr/bin/env python3
import sys


def solve(D: int, c: "List[int]", s: "List[List[int]]", t: "List[int]"):
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    D = int(next(tokens))  # type: int
    c = [int(next(tokens)) for _ in range(26)]  # type: "List[int]"
    s = [[int(next(tokens)) for _ in range(26)] for _ in range(D)]  # type: "List[List[int]]"
    t = [int(next(tokens)) for _ in range(D)]  # type: "List[int]"
    print(solve(D, c, s, t))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
