#!/usr/bin/env python3
import sys


def solve(H: int, W: int, S: "List[str]"):
    DH = (1, 1, 1, 0, 0, -1, -1, -1)
    DW = (-1, 0, 1, -1, 1, -1, 0, 1)
    ans = [['#'] * W for _ in range(H)]
    for h in range(H):
        for w in range(W):
            if S[h][w] == '#':
                continue
            t = 0
            for dh, dw in zip(DH, DW):
                nh, nw = h + dh, w + dw
                if not(0 <= nh < H and 0 <= nw < W):
                    continue
                if S[nh][nw] == '#':
                    t += 1
            ans[h][w] = str(t)
    for a in ans:
        print(''.join(a))

# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(H)]  # type: "List[str]"
    solve(H, W, S)

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
