#!/usr/bin/env python3
import sys


def solve(H: "List[int]", M: "List[int]", K: int):
    assert H[0] <= H[1]
    t1 = 60 * H[0] + M[0]
    t2 = 60 * H[1] + M[1]
    # 制約がよくわからない
    return max(0, t2 - t1 - K)

# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = [int()] * (2)  # type: "List[int]"
    M = [int()] * (2)  # type: "List[int]"
    for i in range(2):
        H[i] = int(next(tokens))
        M[i] = int(next(tokens))
    K = int(next(tokens))  # type: int
    print(solve(H, M, K))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
