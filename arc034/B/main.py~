#!/usr/bin/env python3
import sys


def solve_iter(N: int):
    def f_iter(n):
        while n > 0:
            yield n % 10
            n //= 10

    def f(n):
        return sum(f_iter(n))

    d = len(str(N))
    for i in range(d * 9 + 1):
        if f(N - i) == i:
            yield N - i

def solve(N: int):
    ans = list(solve_iter(N))
    print(len(ans))
    if ans:
        print('\n'.join(map(str, ans)))

# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
