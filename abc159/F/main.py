#!/usr/bin/env python3
import sys

MOD = 998244353  # type: int


def solve(N: int, S: int, A: "List[int]"):
    right = [None] * N
    r, su = 0, 0
    for l in range(N):
        while r < N and su + A[r] < S:
            r += 1
            su += A[r]
        print(l, r, su)
        if su == S:
            right[l] = r
        su -= A[l]
    print(right)


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    print(solve(N, S, A))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
