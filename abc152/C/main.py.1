#!/usr/bin/env python3
import sys

def solve(N: int, P: "List[int]"):
    M = [float('inf')]
    for p in P:
        if p < M[-1]:
            M.append(p)
        else:
            M.append(M[-1])
    return sum(m > p for m, p in zip(M, P))


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    P = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    print(solve(N, P))

if __name__ == '__main__':
    main()
