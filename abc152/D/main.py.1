#!/usr/bin/env python3
import sys
from itertools import product

def solve(N: int):
    def f(n):
        h = n
        while h // 10 > 0:
            h //= 10
        return h, n%10
    table = [[0] * 10 for _ in range(10)]
    for h, t in map(f, range(1, N+1)):
        table[h][t] += 1
    return sum(table[i][j] * table[j][i] for i, j in product(range(1, 10), repeat=2))

# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    print(solve(N))

if __name__ == '__main__':
    main()
