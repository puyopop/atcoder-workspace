#!/usr/bin/env python3
import sys


def solve(N: int, x: "List[float]", u: "List[str]"):
    d = {'JPY': 1, 'BTC':380000}
    return sum(xx * d[uu] for xx, uu in zip(x, u))

# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    x = [float()] * (N)  # type: "List[float]"
    u = [str()] * (N)  # type: "List[str]"
    for i in range(N):
        x[i] = float(next(tokens))
        u[i] = next(tokens)
    print(solve(N, x, u))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
