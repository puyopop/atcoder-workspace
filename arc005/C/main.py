#!/usr/bin/env python3
import sys
sys.setrecursionlimit(1_000_000)

YES = "YES"  # type: str
NO = "NO"  # type: str

def solve(H, W, C):
    visited = set()    
    def dfs(hh, ww, bb):
        stack = [(hh, ww, bb)]
        while stack:
            h, w, b = stack.pop()
            if b < 0:
                continue
            if (h, w, b) in visited:
                continue
            if C[h][w] == "g":
                return True
            visited.add((h, w, b))
            for dh, dw in zip((0, 1, 0, -1), (1, 0, -1, 0)):
                nh, nw = h+dh, w+dw
                if not(0 <= nh < H and 0 <= nw < W):
                    continue
                s = (nh, nw, b-(C[nh][nw] == "#"))
                if s in visited:
                    continue
                stack.append(s)
    for h in range(H):
        for w in range(W):
            if C[h][w] == "s":
                return YES if dfs(h, w, 2) else NO
    raise

# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    H, W = list(map(int, input().split()))
    C = tuple(input() for _ in range(H))
    print(solve(H, W, C))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
